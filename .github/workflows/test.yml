name: Forge

on:
  push:
    branches:
      - main
  pull_request: { }
  workflow_dispatch: { }

env:
  FOUNDRY_PROFILE: ci

jobs:
  check:
    strategy:
      fail-fast: true

    name: Test, coverage
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive

      - name: Install Foundry
        uses: foundry-rs/foundry-toolchain@v1
        with:
          version: nightly

      - name: Run forge build
        run: |
          forge --version
          forge build --sizes
        id: build

      - name: Monitor memory during tests
        run: |
          set +e
          
          (while true; do
            mem_used=$(free -m | grep Mem | awk '{print $3}')
            mem_total=$(free -m | grep Mem | awk '{print $2}')
            mem_percent=$((mem_used * 100 / mem_total))
            echo "$(date +%H:%M:%S) Memory: ${mem_used}MB / ${mem_total}MB (${mem_percent}%)"
            
            if [ $mem_percent -gt 90 ]; then
              echo "WARNING: Memory usage above 90%!"
            fi
            
            sleep 2
          done) > memory_log.txt &
          MEM_PID=$!
          
          forge test --nmc SkipOnCiTest -vv 2>&1 | tee test_output.log
          status=$?
          
          kill $MEM_PID 2>/dev/null
          
          echo "=== Memory usage pattern ==="
          cat memory_log.txt
          
          echo "=== Last test before crash ==="
          grep "Ran.*tests for" test_output.log | tail -n 3
          
          exit $status

        env:
          POLYGON_RPC_URL: ${{secrets.POLYGON_RPC_URL}}
          BASE_RPC_URL: ${{secrets.BASE_RPC_URL}}
          ARBITRUM_RPC_URL: ${{secrets.ARBITRUM_RPC_URL}}
          ETHEREUM_RPC_URL: ${{secrets.ETHEREUM_RPC_URL}}
          REAL_RPC_URL: ${{secrets.REAL_RPC_URL}}
          SONIC_RPC_URL: ${{secrets.SONIC_RPC_URL}}
          AVALANCHE_RPC_URL: ${{secrets.AVALANCHE_RPC_URL}}
        id: test

      - name: Run Forge coverage
        run: |
          forge coverage --nmc SkipOnCiTest --report lcov
        env:
          POLYGON_RPC_URL: ${{secrets.POLYGON_RPC_URL}}
          BASE_RPC_URL: ${{secrets.BASE_RPC_URL}}
          ARBITRUM_RPC_URL: ${{secrets.ARBITRUM_RPC_URL}}
          ETHEREUM_RPC_URL: ${{secrets.ETHEREUM_RPC_URL}}
          REAL_RPC_URL: ${{secrets.REAL_RPC_URL}}
          SONIC_RPC_URL: ${{secrets.SONIC_RPC_URL}}
          AVALANCHE_RPC_URL: ${{secrets.AVALANCHE_RPC_URL}}
        id: coverage

      - name: Upload coverage lcov report to Codecov
        uses: codecov/codecov-action@v3
        env:
          CODECOV_TOKEN: ${{secrets.CODECOV_TOKEN}}

      - name: Upload RPC cache
        uses: actions/upload-artifact@v4
        with:
          name: rpc-cache
          path: ~/.foundry/cache/rpc

      - name: Upload lcov.info as artifact
        uses: actions/upload-artifact@v4
        with:
          name: lcov-report
          path: lcov.info


      - name: Upload memory log 2
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: memory-log
          path: |
            memory_log.txt
            test_output.log