name: Forge

on:
  push:
    branches:
      - main
  pull_request: { }
  workflow_dispatch: { }

env:
  FOUNDRY_PROFILE: ci

jobs:
  check:
    strategy:
      fail-fast: true

    name: Test, coverage
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive

      - name: Install Foundry
        uses: foundry-rs/foundry-toolchain@v1
        with:
          version: nightly

      - name: Run forge build
        run: |
          forge --version
          forge build --sizes
        id: build

      - name: Run forge test
        timeout-minutes: 20
        run: |
            set +e
            
            # Запускаем тесты в фоне
            forge test --nmc SkipOnCiTest -vvv > test_output.log 2>&1 &
            FORGE_PID=$!
            
            # Watchdog: проверяем каждые 60 секунд
            LAST_SIZE=0
            NO_PROGRESS_COUNT=0
            
            while kill -0 $FORGE_PID 2>/dev/null; do
              sleep 60
              
              CURRENT_SIZE=$(wc -c < test_output.log)
              
              echo "$(date): Log size: $CURRENT_SIZE bytes (was $LAST_SIZE)"
              tail -n 5 test_output.log
              
              if [ $CURRENT_SIZE -eq $LAST_SIZE ]; then
                NO_PROGRESS_COUNT=$((NO_PROGRESS_COUNT + 1))
                echo "Warning: No progress for $NO_PROGRESS_COUNT minute(s)"
                
                if [ $NO_PROGRESS_COUNT -ge 5 ]; then
                  echo "ERROR: Test hung for 5 minutes! Killing process..."
                  ps aux | grep forge
                  kill -9 $FORGE_PID
                  echo "=== Last 100 lines before hang ==="
                  tail -n 100 test_output.log
                  exit 1
                fi
              else
                NO_PROGRESS_COUNT=0
              fi
              
              LAST_SIZE=$CURRENT_SIZE
            done
            
            # Ждем завершения процесса
            wait $FORGE_PID
            status=$?
            
            echo "=== Full test output ==="
            cat test_output.log
            
            exit $status

        env:
          POLYGON_RPC_URL: ${{secrets.POLYGON_RPC_URL}}
          BASE_RPC_URL: ${{secrets.BASE_RPC_URL}}
          ARBITRUM_RPC_URL: ${{secrets.ARBITRUM_RPC_URL}}
          ETHEREUM_RPC_URL: ${{secrets.ETHEREUM_RPC_URL}}
          REAL_RPC_URL: ${{secrets.REAL_RPC_URL}}
          SONIC_RPC_URL: ${{secrets.SONIC_RPC_URL}}
          AVALANCHE_RPC_URL: ${{secrets.AVALANCHE_RPC_URL}}
        id: test

      - name: Run Forge coverage
        run: |
          forge coverage --nmc SkipOnCiTest --report lcov
        env:
          POLYGON_RPC_URL: ${{secrets.POLYGON_RPC_URL}}
          BASE_RPC_URL: ${{secrets.BASE_RPC_URL}}
          ARBITRUM_RPC_URL: ${{secrets.ARBITRUM_RPC_URL}}
          ETHEREUM_RPC_URL: ${{secrets.ETHEREUM_RPC_URL}}
          REAL_RPC_URL: ${{secrets.REAL_RPC_URL}}
          SONIC_RPC_URL: ${{secrets.SONIC_RPC_URL}}
          AVALANCHE_RPC_URL: ${{secrets.AVALANCHE_RPC_URL}}
        id: coverage

      - name: Upload coverage lcov report to Codecov
        uses: codecov/codecov-action@v3
        env:
          CODECOV_TOKEN: ${{secrets.CODECOV_TOKEN}}

      - name: Upload RPC cache
        uses: actions/upload-artifact@v4
        with:
          name: rpc-cache
          path: ~/.foundry/cache/rpc

      - name: Upload lcov.info as artifact
        uses: actions/upload-artifact@v4
        with:
          name: lcov-report
          path: lcov.info
